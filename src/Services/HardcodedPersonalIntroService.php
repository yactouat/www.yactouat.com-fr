<?php

namespace App\Services;

use Exception;

/**
 * this class is responsible for fetching personal intro data from memory
 */

final class HardcodedPersonalIntroService implements PersonalIntroServiceInterface
{
    public function __construct()
    {
        $this->setSections([
            [
                'heading' => 'A mon propos',
                'paragraphs' => [
                    "En tant que d√©veloppeur, j'aime l'efficience, l'optimisation, les processus d'am√©lioration continue.",
                    'Je veux consommer et produire des solutions simples et intuitives, automatis√©es.',
                    "Professionel dans le monde du d√©veloppement web depuis cinq ans, je me sens particuli√®rement accompli quand mon travail permet d'am√©liorer au mieux le quotidien de mes partenaires, clients, coll√®gues, √©l√®ves, etc.",
                    "J'aime aborder mes projets en m'appuyant sur des tests automatis√©s et sur un feedback r√©gulier des utilisateurs finaux de mes solutions.",
                    'Sur une codebase existante ou from scratch, donnez-moi des probl√®mes √† r√©soudre ! üîß'
                ]
            ],
            [
                'heading' => 'Ma proposition de projet',
                'paragraphs' => [
                    "Un projet r√©ussi est un projet cl√¥tur√© sans y perdre sa t√™te ou son temps. C'est l√† que j'interviens, en m'assurant que nous irons loin ensemble, it√©ration apr√®s it√©ration. üîÅ",
                    "Vous avez besoin d'un accompagnement personnalis√© ? De prestations de consulting IT ou encore de formation ?",
                    "En travaillant avec moi, vous serez assur√© que mon exp√©rience, mon exp√©rience, mon opini√¢tret√©, ainsi que mon aisance relationnelle avec vous et vos √©quipes nous permettront d'atteindre vos objectifs. üöÄ",
                    'Je vous accompagnerai avec expertise, rigueur, passion, et enthousiasme tout le long du cycle de vie de votre application.',
                    "En tant que d√©veloppeur full stack, mon exp√©rience m'a permis d'impl√©menter toutes sortes de solutions avec diverses technologies: PHP (natif, Laravel, ou Symfony), la MERN stack, des bases de donn√©es documents ou relationnelles, de la containerisation avec Docker et Kubernetes, des CI/CD pipelines, la Google Cloud Platform...",
                    "En tant que formateur en d√©veloppement web pour des √©tablissements reconnus (<a href=\"https://openclassrooms.com/fr/\" target=\"_blank\">OpenClassrooms</a>, <a href=\"https://www.wildcodeschool.com/en-GB\" target=\"_blank\">Wild Code School</a>, <a href=\"https://www.udacity.com/\" target=\"_blank\">Udacity</a>), j'ai acquis les techniques p√©dagogiques n√©cessaires pour enseigner mes connaissances √† tous types de publics: j'adore transmettre !"
                ]
            ],
            [
                'heading' => 'Mon exp√©rience professionnelle',
                'paragraphs' => [
                    "Permettez-moi de partager avec vous une liste du type de fonctionnalit√©s et missions que j'ai pu r√©aliser: üèÜ",
                ],
                'listItems' => [
                    'La cr√©ation de microservices d√©coupl√©s sur la Google Cloud Platform utilisant la technologie Pub/Sub.',
                    "Un template de facturation pour une application PHP d'agenda √† destination de cabinets m√©dicaux.",
                    "Un chatbot utilisant l'API Telegram pour prendre des cong√©s de mani√®re automatis√©e.",
                    "Un prototype de solution de reconnaissance faciale utilisant des librairies Python en open-source pour faire du contr√¥le d'acc√®s √† des zones restreintes.",
                    "Une fonctionnalit√© cross-platforms de v√©rification d'habilitations pour des techniciens intervenant sur des sites industriels, et conditionnant la planification de leurs √©ventuels d√©placements sur les diff√©rentes sites.",
                    "Le mentoring d'√©tudiants afin de les aider √† obtenir leur titre certifiant de d√©veloppeur web."
                ]
            ]
        ]);
    }

    /**
     * @inheritDoc
     *
     * @return array
     */
    public function getSections(): array
    {
        return $this->_sections;
    }

    /**
     * @inheritDoc
     *
     * @return void
     */
    public function setSections(array $sections): void
    {
        $this->_sections = $sections;
    }
}
